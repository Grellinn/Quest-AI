/**********************************************************************
 *
 *   Responsiveness hook generated by Quest
 *
 *   Responsive Logic for the component goes in this hook
 *   If you want to customize the min/max values for the breakpoints, open the component on Quest Editor.
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';

const useFooterResponsiveSize = () => {
  const [variant, setVariant] = React.useState('Property1desktop');

  React.useEffect(() => {
    const handlerProperty1mobile = (e) =>
      setVariant((size) => (e.matches ? 'Property1mobile' : size));

    const Property1mobileSize = window.matchMedia('(max-width: 572px)');
    setVariant((size) =>
      Property1mobileSize.matches ? 'Property1mobile' : size
    );
    Property1mobileSize.addEventListener('change', handlerProperty1mobile);

    const handlerProperty1tablet = (e) =>
      setVariant((size) => (e.matches ? 'Property1tablet' : size));

    const Property1tabletSize = window.matchMedia(
      '(min-width: 573px) and (max-width: 1104px)'
    );
    setVariant((size) =>
      Property1tabletSize.matches ? 'Property1tablet' : size
    );
    Property1tabletSize.addEventListener('change', handlerProperty1tablet);

    const handlerProperty1desktop = (e) =>
      setVariant((size) => (e.matches ? 'Property1desktop' : size));

    const Property1desktopSize = window.matchMedia('(min-width: 1105px)');
    setVariant((size) =>
      Property1desktopSize.matches ? 'Property1desktop' : size
    );
    Property1desktopSize.addEventListener('change', handlerProperty1desktop);
  }, []);

  return variant;
};

export default useFooterResponsiveSize;
