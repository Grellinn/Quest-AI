/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preseve that abilty, always export from Quest to regenerate this file.
 *   To setup props, bindings and actions, use the Quest editor
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { Button } from '@mui/material';
import { styled } from '@mui/material/styles';
import Video from 'components/Video/Video';
import useHtml from 'components/Html/useHtml';

const Property1HtmlD = styled('div')({
  backgroundColor: `rgba(23, 23, 23, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: 'auto',
});

const Page = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const HeroD = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage: `url(assets/images/HTML_hero___d.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `50px 8px 54px 32px`
      : data.currentVariant === 'Property1HTMLM'
      ? `50px 8px 54px 8px`
      : `80px 8px 54px 132px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  height:
    data.currentVariant === 'Property1HTMLT'
      ? 'unset'
      : data.currentVariant === 'Property1HTMLM'
      ? 'unset'
      : `769px`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `50px 0px 0px 0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `50px 0px 0px 0px`
      : `0px`,
  overflow: `hidden`,
}));

const HeroAll = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const ActionsIcon = styled('img', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  height: data.currentVariant === 'Property1HTMLM' ? `24px` : `49px`,
  width: data.currentVariant === 'Property1HTMLM' ? `24px` : `49px`,
  margin: `0px`,
}));

const HeroContent = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px 0px 0px 3px`,
});

const HeroTxtSpan1 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `60px`
      : data.currentVariant === 'Property1HTMLM'
      ? `36px`
      : `78px`,
  letterSpacing: data.currentVariant === 'Property1HTMLM' ? `-0.5px` : `-3px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `56px`
      : data.currentVariant === 'Property1HTMLM'
      ? `37px`
      : `72px`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
}));

const HeroTxtSpan2 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `60px`
      : data.currentVariant === 'Property1HTMLM'
      ? `36px`
      : `78px`,
  letterSpacing: data.currentVariant === 'Property1HTMLM' ? `-0.5px` : `-3px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `56px`
      : data.currentVariant === 'Property1HTMLM'
      ? `37px`
      : `72px`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
}));

const HeroTxtSpan3 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `60px`
      : data.currentVariant === 'Property1HTMLM'
      ? `36px`
      : `78px`,
  letterSpacing: data.currentVariant === 'Property1HTMLM' ? `-0.5px` : `-3px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `56px`
      : data.currentVariant === 'Property1HTMLM'
      ? `37px`
      : `72px`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
}));

const HeroTxt = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `60px`
      : data.currentVariant === 'Property1HTMLM'
      ? `36px`
      : `78px`,
  letterSpacing: data.currentVariant === 'Property1HTMLM' ? `-0.5px` : `-3px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `56px`
      : data.currentVariant === 'Property1HTMLM'
      ? `37px`
      : `72px`,
  textTransform: `none`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1HTMLT'
      ? `stretch`
      : data.currentVariant === 'Property1HTMLM'
      ? `stretch`
      : 'unset',
}));

const HeroSub = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1HTMLM' ? `16px` : `18px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `28px`
      : data.currentVariant === 'Property1HTMLM'
      ? `26px`
      : `30px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `468px`
      : data.currentVariant === 'Property1HTMLM'
      ? `243px`
      : `400px`,
  margin: `25px 0px 0px 0px`,
}));

const ButtonOutlined = styled(Button)({
  margin: `25px 0px 0px 0px`,
});

const Hero = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage: `url(assets/images/HTML_hero.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `50px 8px 54px 32px`
      : data.currentVariant === 'Property1HTMLM'
      ? `50px 8px 54px 8px`
      : `50px 8px 54px 132px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px`
      : `50px 0px 0px 0px`,
  overflow: `hidden`,
}));

const HeroAll1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const ActionsIcon1 = styled('img', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  height: data.currentVariant === 'Property1HTMLM' ? `24px` : `49px`,
  width: data.currentVariant === 'Property1HTMLM' ? `24px` : `49px`,
  margin: `0px`,
}));

const HeroContent1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px 0px 0px 3px`,
});

const HeroTxt1Span1 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `60px`
      : data.currentVariant === 'Property1HTMLM'
      ? `36px`
      : `78px`,
  letterSpacing: data.currentVariant === 'Property1HTMLM' ? `-0.5px` : `-3px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `56px`
      : data.currentVariant === 'Property1HTMLM'
      ? `37px`
      : `72px`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
}));

const HeroTxt1Span2 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `60px`
      : data.currentVariant === 'Property1HTMLM'
      ? `36px`
      : `78px`,
  letterSpacing: data.currentVariant === 'Property1HTMLM' ? `-0.5px` : `-3px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `56px`
      : data.currentVariant === 'Property1HTMLM'
      ? `37px`
      : `72px`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
}));

const HeroTxt1Span3 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `60px`
      : data.currentVariant === 'Property1HTMLM'
      ? `36px`
      : `78px`,
  letterSpacing: data.currentVariant === 'Property1HTMLM' ? `-0.5px` : `-3px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `56px`
      : data.currentVariant === 'Property1HTMLM'
      ? `37px`
      : `72px`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
}));

const HeroTxt1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `60px`
      : data.currentVariant === 'Property1HTMLM'
      ? `36px`
      : `78px`,
  letterSpacing: data.currentVariant === 'Property1HTMLM' ? `-0.5px` : `-3px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `56px`
      : data.currentVariant === 'Property1HTMLM'
      ? `37px`
      : `72px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const HeroSub1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1HTMLM' ? `16px` : `18px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `28px`,
  textTransform: `none`,
  width: data.currentVariant === 'Property1HTMLM' ? `243px` : `468px`,
  margin: `25px 0px 0px 0px`,
}));

const ButtonOutlined1 = styled(Button)({
  margin: `25px 0px 0px 0px`,
});

const Video1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
});

const Subtitle = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ActionsIcon2 = styled('img')({
  height: `14px`,
  width: `14px`,
  margin: `0px`,
});

const NeoFromQuestAiEm = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  margin: `0px 0px 0px 8px`,
});

const Video2 = styled(Video, {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ theme, data }) => ({
  height:
    data.currentVariant === 'Property1HTMLT'
      ? `337px`
      : data.currentVariant === 'Property1HTMLM'
      ? `194px`
      : `607px`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `600px`
      : data.currentVariant === 'Property1HTMLM'
      ? `345px`
      : `1080px`,
  margin: `7px 0px 0px 0px`,
}));

const Benefits = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'Property1HTMLM' ? `column` : `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `0px 36px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px 36px`
      : `0px 184px 60px 184px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
}));

const DesignWithoutLimits = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: data.currentVariant === 'Property1HTMLM' ? 'unset' : `1`,
  margin: `0px`,
}));

const DesignToLiveHtml = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `22px`
      : data.currentVariant === 'Property1HTMLM'
      ? `22px`
      : `26px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `22px`
      : data.currentVariant === 'Property1HTMLM'
      ? `22px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const ImportYourDifferen = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLM' ? `0px` : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `22px`
      : data.currentVariant === 'Property1HTMLM'
      ? `26px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const ExportToCode = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: data.currentVariant === 'Property1HTMLM' ? 'unset' : `1`,
  margin:
    data.currentVariant === 'Property1HTMLM'
      ? `44px 0px 0px 0px`
      : `0px 0px 0px 44px`,
}));

const DesignToLiveHtml1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `22px`
      : data.currentVariant === 'Property1HTMLM'
      ? `22px`
      : `26px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `22px`
      : data.currentVariant === 'Property1HTMLM'
      ? `22px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const ImportYourDifferen1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `22px`
      : data.currentVariant === 'Property1HTMLM'
      ? `26px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const LaunchAndDone = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: data.currentVariant === 'Property1HTMLM' ? 'unset' : `1`,
  margin:
    data.currentVariant === 'Property1HTMLM'
      ? `44px 0px 0px 0px`
      : `0px 0px 0px 44px`,
}));

const DesignToLiveHtml2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `22px`
      : data.currentVariant === 'Property1HTMLM'
      ? `22px`
      : `26px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `22px`
      : data.currentVariant === 'Property1HTMLM'
      ? `22px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const ImportYourDifferen2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLM' ? `0px` : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `22px`
      : data.currentVariant === 'Property1HTMLM'
      ? `26px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const SecPic = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px`
      : `0px 140px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
}));

const Pic2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage: `url(assets/images/HTML_pic2.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `79px 36px 79px 84px`
      : data.currentVariant === 'Property1HTMLM'
      ? `79px 36px`
      : `79px 44px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const ForMarketers = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ForMarketers1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `22px`
      : data.currentVariant === 'Property1HTMLM'
      ? `22px`
      : `26px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `22px`
      : data.currentVariant === 'Property1HTMLM'
      ? `22px`
      : `30px`,
  textTransform: `none`,
  textShadow: `0px 2px 2px rgba(0, 0, 0, 0.15)`,
  width: `208px`,
  margin: `0px`,
}));

const LoremIpsumForPlacCop = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: data.currentVariant === 'Property1HTMLM' ? `700` : `600`,
  fontSize: data.currentVariant === 'Property1HTMLM' ? `16px` : `18px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1HTMLM' ? `24px` : `22px`,
  textTransform: `none`,
  textShadow: `0px 2px 2px rgba(0, 0, 0, 0.15)`,
  height: `90px`,
  width: `208px`,
  margin: `8px 0px 0px 0px`,
}));

const FeaturesForDesigners = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'Property1HTMLM' ? `column` : `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `0px 84px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px 36px`
      : `0px 184px 60px 184px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
}));

const Frame124 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: data.currentVariant === 'Property1HTMLM' ? 'unset' : `1`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'Property1HTMLM' ? `stretch` : 'unset',
}));

const RectangleCopy30 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Video3 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `26px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `-0.21290338039398193px`
      : data.currentVariant === 'Property1HTMLM'
      ? `-0.21290338039398193px`
      : `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `20px`
      : data.currentVariant === 'Property1HTMLM'
      ? `20px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Xxxxxxx = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `24px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy34 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const Buttons = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `26px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `-0.21290338039398193px`
      : data.currentVariant === 'Property1HTMLM'
      ? `-0.21290338039398193px`
      : `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `20px`
      : data.currentVariant === 'Property1HTMLM'
      ? `20px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Xxxxxxx1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `24px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy40 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const Components = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `26px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `-0.21290338039398193px`
      : data.currentVariant === 'Property1HTMLM'
      ? `-0.21290338039398193px`
      : `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `20px`
      : data.currentVariant === 'Property1HTMLM'
      ? `20px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Xxxxxxx2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `24px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy32 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const Animations = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `26px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `-0.21290338039398193px`
      : data.currentVariant === 'Property1HTMLM'
      ? `-0.21290338039398193px`
      : `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `20px`
      : data.currentVariant === 'Property1HTMLM'
      ? `20px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Xxxxxxx3 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `24px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const Frame125 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: data.currentVariant === 'Property1HTMLM' ? 'unset' : `1`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `0px 0px 0px 30px`
      : data.currentVariant === 'Property1HTMLM'
      ? `30px 0px 0px 0px`
      : `0px 0px 0px 60px`,
  alignSelf: data.currentVariant === 'Property1HTMLM' ? `stretch` : 'unset',
}));

const RectangleCopy38 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const SfxMusic = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `26px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `-0.21290338039398193px`
      : data.currentVariant === 'Property1HTMLM'
      ? `-0.21290338039398193px`
      : `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `20px`
      : data.currentVariant === 'Property1HTMLM'
      ? `20px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const UploadSoundAndMus = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `24px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy36 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const Interactions = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `26px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `-0.21290338039398193px`
      : data.currentVariant === 'Property1HTMLM'
      ? `-0.21290338039398193px`
      : `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `20px`
      : data.currentVariant === 'Property1HTMLM'
      ? `20px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Xxxxxxx4 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `24px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy7 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const CustomFonts = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `26px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `-0.21290338039398193px`
      : data.currentVariant === 'Property1HTMLM'
      ? `-0.21290338039398193px`
      : `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `20px`
      : data.currentVariant === 'Property1HTMLM'
      ? `20px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const QuestSupportsGoogl = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `24px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy18 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
  overflow: `hidden`,
});

const ParallaxScrolling = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `26px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `-0.21290338039398193px`
      : data.currentVariant === 'Property1HTMLM'
      ? `-0.21290338039398193px`
      : `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `20px`
      : data.currentVariant === 'Property1HTMLM'
      ? `20px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Xxxxxxx5 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `24px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy23 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
  overflow: `hidden`,
});

const TriggerWithScroll = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `26px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `-0.21290338039398193px`
      : data.currentVariant === 'Property1HTMLM'
      ? `-0.21290338039398193px`
      : `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `20px`
      : data.currentVariant === 'Property1HTMLM'
      ? `20px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Xxxxxxx6 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `24px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const SecPic1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px`
      : `0px 140px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
}));

const Pic21 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage: `url(assets/images/HTML_pic2_1.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `79px 36px 79px 84px`
      : data.currentVariant === 'Property1HTMLM'
      ? `79px 36px`
      : `79px 44px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const ForMarketers2 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ForMarketers3 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `22px`
      : data.currentVariant === 'Property1HTMLM'
      ? `22px`
      : `26px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `22px`
      : data.currentVariant === 'Property1HTMLM'
      ? `22px`
      : `30px`,
  textTransform: `none`,
  textShadow: `0px 2px 2px rgba(0, 0, 0, 0.15)`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `208px`
      : data.currentVariant === 'Property1HTMLM'
      ? `208px`
      : `237px`,
  margin: `0px`,
}));

const LoremIpsumForPlacCop1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: data.currentVariant === 'Property1HTMLM' ? `700` : `600`,
  fontSize: data.currentVariant === 'Property1HTMLM' ? `16px` : `18px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1HTMLM' ? `24px` : `22px`,
  textTransform: `none`,
  textShadow: `0px 2px 2px rgba(0, 0, 0, 0.15)`,
  height: `90px`,
  width: `208px`,
  margin: `8px 0px 0px 0px`,
}));

const FeaturesForMarketers = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'Property1HTMLM' ? `column` : `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `0px 84px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px 36px`
      : `0px 184px 50px 184px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
}));

const Frame1241 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: data.currentVariant === 'Property1HTMLM' ? 'unset' : `1`,
  margin: `0px`,
}));

const RectangleCopy31 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  overflow: `hidden`,
});

const Video4 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `26px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `-0.21290338039398193px`
      : data.currentVariant === 'Property1HTMLM'
      ? `-0.21290338039398193px`
      : `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `20px`
      : data.currentVariant === 'Property1HTMLM'
      ? `20px`
      : `30px`,
  textTransform: `none`,
  width: data.currentVariant === 'Property1HTMLM' ? 'unset' : `333px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'Property1HTMLM' ? `stretch` : 'unset',
}));

const Xxxxxxx7 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `24px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy35 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
  overflow: `hidden`,
});

const Buttons1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `26px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `-0.21290338039398193px`
      : data.currentVariant === 'Property1HTMLM'
      ? `-0.21290338039398193px`
      : `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `20px`
      : data.currentVariant === 'Property1HTMLM'
      ? `20px`
      : `30px`,
  textTransform: `none`,
  width: data.currentVariant === 'Property1HTMLM' ? 'unset' : `333px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'Property1HTMLM' ? `stretch` : 'unset',
}));

const Xxxxxxx8 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `24px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy41 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
  overflow: `hidden`,
});

const Components1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `26px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `-0.21290338039398193px`
      : data.currentVariant === 'Property1HTMLM'
      ? `-0.21290338039398193px`
      : `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `20px`
      : data.currentVariant === 'Property1HTMLM'
      ? `20px`
      : `30px`,
  textTransform: `none`,
  width: data.currentVariant === 'Property1HTMLM' ? 'unset' : `333px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'Property1HTMLM' ? `stretch` : 'unset',
}));

const Xxxxxxx9 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `24px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const Frame1251 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: data.currentVariant === 'Property1HTMLM' ? 'unset' : `1`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `0px 0px 0px 30px`
      : data.currentVariant === 'Property1HTMLM'
      ? `30px 0px 0px 0px`
      : `0px 0px 0px 60px`,
}));

const RectangleCopy33 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  overflow: `hidden`,
});

const Animations1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `26px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `-0.21290338039398193px`
      : data.currentVariant === 'Property1HTMLM'
      ? `-0.21290338039398193px`
      : `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `20px`
      : data.currentVariant === 'Property1HTMLM'
      ? `20px`
      : `30px`,
  textTransform: `none`,
  width: data.currentVariant === 'Property1HTMLM' ? 'unset' : `333px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'Property1HTMLM' ? `stretch` : 'unset',
}));

const Xxxxxxx10 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `24px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy37 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
  overflow: `hidden`,
});

const Interactions1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `26px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `-0.21290338039398193px`
      : data.currentVariant === 'Property1HTMLM'
      ? `-0.21290338039398193px`
      : `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `20px`
      : data.currentVariant === 'Property1HTMLM'
      ? `20px`
      : `30px`,
  textTransform: `none`,
  width: data.currentVariant === 'Property1HTMLM' ? 'unset' : `333px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'Property1HTMLM' ? `stretch` : 'unset',
}));

const Xxxxxxx11 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `24px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy39 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
  overflow: `hidden`,
});

const SfxMusic1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `26px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `-0.21290338039398193px`
      : data.currentVariant === 'Property1HTMLM'
      ? `-0.21290338039398193px`
      : `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `20px`
      : data.currentVariant === 'Property1HTMLM'
      ? `20px`
      : `30px`,
  textTransform: `none`,
  width: data.currentVariant === 'Property1HTMLM' ? 'unset' : `333px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'Property1HTMLM' ? `stretch` : 'unset',
}));

const UploadSoundAndMus1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `24px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const SecPic2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `0px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px`
      : `0px 140px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
}));

const Pic3 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage: `url(assets/images/HTML_pic3.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `79px 36px 79px 84px`
      : data.currentVariant === 'Property1HTMLM'
      ? `79px 36px`
      : `79px 44px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const ForDevelopers = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? 'unset'
      : data.currentVariant === 'Property1HTMLM'
      ? 'unset'
      : `259px`,
  margin: `0px`,
}));

const ForMarketers4 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `22px`
      : data.currentVariant === 'Property1HTMLM'
      ? `22px`
      : `26px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `22px`
      : data.currentVariant === 'Property1HTMLM'
      ? `22px`
      : `30px`,
  textTransform: `none`,
  textShadow: `0px 2px 2px rgba(0, 0, 0, 0.15)`,
  alignSelf:
    data.currentVariant === 'Property1HTMLT'
      ? 'unset'
      : data.currentVariant === 'Property1HTMLM'
      ? 'unset'
      : `stretch`,
  margin: `0px`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `208px`
      : data.currentVariant === 'Property1HTMLM'
      ? `208px`
      : 'unset',
}));

const LoremIpsumForPlacCop2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: data.currentVariant === 'Property1HTMLM' ? `700` : `600`,
  fontSize: data.currentVariant === 'Property1HTMLM' ? `16px` : `18px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1HTMLM' ? `24px` : `22px`,
  textTransform: `none`,
  textShadow: `0px 2px 2px rgba(0, 0, 0, 0.15)`,
  alignSelf:
    data.currentVariant === 'Property1HTMLT'
      ? 'unset'
      : data.currentVariant === 'Property1HTMLM'
      ? 'unset'
      : `stretch`,
  height: `90px`,
  margin: `8px 0px 0px 0px`,
  width:
    data.currentVariant === 'Property1HTMLT'
      ? `208px`
      : data.currentVariant === 'Property1HTMLM'
      ? `208px`
      : 'unset',
}));

const FeaturesForDeveloper = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'Property1HTMLM' ? `column` : `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `0px 84px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px 36px`
      : `0px 184px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
}));

const Frame1242 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: data.currentVariant === 'Property1HTMLM' ? 'unset' : `1`,
  margin: `0px`,
}));

const RectangleCopy24 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Video5 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `26px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `-0.21290338039398193px`
      : data.currentVariant === 'Property1HTMLM'
      ? `-0.21290338039398193px`
      : `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `20px`
      : data.currentVariant === 'Property1HTMLM'
      ? `20px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Xxxxxxx12 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `24px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy25 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const Buttons2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `26px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `-0.21290338039398193px`
      : data.currentVariant === 'Property1HTMLM'
      ? `-0.21290338039398193px`
      : `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `20px`
      : data.currentVariant === 'Property1HTMLM'
      ? `20px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Xxxxxxx13 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `24px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy29 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const Components2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `26px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `-0.21290338039398193px`
      : data.currentVariant === 'Property1HTMLM'
      ? `-0.21290338039398193px`
      : `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `20px`
      : data.currentVariant === 'Property1HTMLM'
      ? `20px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Xxxxxxx14 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `24px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const Frame1252 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: data.currentVariant === 'Property1HTMLM' ? 'unset' : `1`,
  margin:
    data.currentVariant === 'Property1HTMLT'
      ? `0px 0px 0px 30px`
      : data.currentVariant === 'Property1HTMLM'
      ? `30px 0px 0px 0px`
      : `0px 0px 0px 60px`,
}));

const RectangleCopy27 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Animations2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `26px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `-0.21290338039398193px`
      : data.currentVariant === 'Property1HTMLM'
      ? `-0.21290338039398193px`
      : `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `20px`
      : data.currentVariant === 'Property1HTMLM'
      ? `20px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Xxxxxxx15 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `24px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy28 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const Interactions2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `26px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `-0.21290338039398193px`
      : data.currentVariant === 'Property1HTMLM'
      ? `-0.21290338039398193px`
      : `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `20px`
      : data.currentVariant === 'Property1HTMLM'
      ? `20px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Xxxxxxx16 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `24px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy8 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const SfxMusic2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `26px`,
  letterSpacing:
    data.currentVariant === 'Property1HTMLT'
      ? `-0.21290338039398193px`
      : data.currentVariant === 'Property1HTMLM'
      ? `-0.21290338039398193px`
      : `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `20px`
      : data.currentVariant === 'Property1HTMLM'
      ? `20px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const UploadSoundAndMus2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `16px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `24px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const Faq = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1HTMLT'
      ? `100px 84px 0px 84px`
      : data.currentVariant === 'Property1HTMLM'
      ? `0px 36px`
      : `100px 184px 0px 184px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
}));

const FaQs = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1HTMLT'
      ? `flex-start`
      : data.currentVariant === 'Property1HTMLM'
      ? `flex-start`
      : `flex-end`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
}));

const Faq1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `44px`
      : data.currentVariant === 'Property1HTMLM'
      ? `44px`
      : `50px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: `62px`,
  textTransform: `none`,
  margin: `0px`,
}));

const FaQs1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `20px 0px 0px 0px`,
});

const Row = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 60px 0px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Frame126 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const GameChangingFeatur = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `28px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `32px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const NeoFromQuestAiEm1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `26px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `6px 0px 0px 0px`,
}));

const Divider = styled('div')({
  backgroundColor: `rgba(88, 88, 88, 1)`,
  alignSelf: `stretch`,
  height: `1px`,
  margin: `30px 0px 0px 0px`,
});

const Row1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 60px 0px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const Frame1261 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const GameChangingFeatur1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `28px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `32px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const NeoFromQuestAiEm2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `26px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `6px 0px 0px 0px`,
}));

const Divider1 = styled('div')({
  backgroundColor: `rgba(88, 88, 88, 1)`,
  alignSelf: `stretch`,
  height: `1px`,
  margin: `30px 0px 0px 0px`,
});

const Row2 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 60px 0px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const Frame1262 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const GameChangingFeatur2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `28px`
      : data.currentVariant === 'Property1HTMLM'
      ? `18px`
      : `32px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const NeoFromQuestAiEm3 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'Property1HTMLT'
      ? `18px`
      : data.currentVariant === 'Property1HTMLM'
      ? `16px`
      : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1HTMLT'
      ? `26px`
      : data.currentVariant === 'Property1HTMLM'
      ? `24px`
      : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `6px 0px 0px 0px`,
}));

const Divider2 = styled('div')({
  backgroundColor: `rgba(88, 88, 88, 1)`,
  height: `1px`,
  width: `954px`,
  margin: `30px 0px 0px 0px`,
});

const Join = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1HTMLM'
      ? `0px 0px 50px 0px`
      : `100px 0px 150px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
}));

const JoinUsOnOurMissiSpan1 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1HTMLM' ? `30px` : `38px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1HTMLM' ? `32px` : `40px`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  width: 'unset',
  margin: 'unset',
}));

const JoinUsOnOurMissiSpan2 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(41, 41, 41, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1HTMLM' ? `30px` : `38px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1HTMLM' ? `32px` : `40px`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  width: 'unset',
  margin: 'unset',
}));

const JoinUsOnOurMissiSpan3 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1HTMLM' ? `30px` : `38px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1HTMLM' ? `32px` : `40px`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  width: 'unset',
  margin: 'unset',
}));

const JoinUsOnOurMissi = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1HTMLM' ? `30px` : `38px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1HTMLM' ? `32px` : `40px`,
  textTransform: `none`,
  width: data.currentVariant === 'Property1HTMLM' ? `305px` : `378px`,
  margin: `0px`,
}));

const ButtonOutlined2 = styled(Button)({
  margin: `18px 0px 0px 0px`,
});

function Html(props) {
  const { data } = useHtml();

  return (
    <Property1HtmlD className={props.className}>
      <Page>
        {!(data.currentVariant === 'Property1HTMLT') &&
          !(data.currentVariant === 'Property1HTMLM') && (
            <HeroD data={data}>
              <HeroAll>
                <ActionsIcon
                  data={data}
                  src={`assets/images/HTML_Actions_Icon.png`}
                  loading="lazy"
                  alt={'Actions Icon'}
                />
                <HeroContent>
                  <HeroTxt data={data}>
                    <HeroTxtSpan1 data={data}>{`Convert
your design
into a `}</HeroTxtSpan1>
                    <HeroTxtSpan2 data={data}>{`launch
`}</HeroTxtSpan2>
                    <HeroTxtSpan3 data={data}>{`ready website`}</HeroTxtSpan3>
                  </HeroTxt>
                  <HeroSub data={data}>
                    {`Design what you want and automatically bring pixel-perfect, responsive sites to life. `}
                  </HeroSub>
                  <ButtonOutlined
                    variant="outlined"
                    size="large"
                    color="primary"
                  >
                    {' '}
                    Build for Free{' '}
                  </ButtonOutlined>
                </HeroContent>
              </HeroAll>
            </HeroD>
          )}
        {(data.currentVariant === 'Property1HTMLT' ||
          data.currentVariant === 'Property1HTMLM') && (
          <Hero data={data}>
            <HeroAll1>
              <ActionsIcon1
                data={data}
                src={`assets/images/HTML_Actions_Icon_1.png`}
                loading="lazy"
                alt={'Actions Icon'}
              />
              <HeroContent1>
                <HeroTxt1 data={data}>
                  <HeroTxt1Span1 data={data}>{`Convert
your design
into a `}</HeroTxt1Span1>
                  <HeroTxt1Span2 data={data}>{`launch
`}</HeroTxt1Span2>
                  <HeroTxt1Span3 data={data}>{`ready website`}</HeroTxt1Span3>
                </HeroTxt1>
                <HeroSub1 data={data}>
                  {`Design what you want and automatically bring pixel-perfect, responsive sites to life. `}
                </HeroSub1>
                <ButtonOutlined1
                  variant="outlined"
                  size="large"
                  color="primary"
                >
                  {' '}
                  Build for Free{' '}
                </ButtonOutlined1>
              </HeroContent1>
            </HeroAll1>
          </Hero>
        )}
        <Video1>
          <Subtitle>
            <ActionsIcon2
              src={`assets/images/HTML_Actions_Icon_2.png`}
              loading="lazy"
              alt={'Actions Icon'}
            />
            <NeoFromQuestAiEm>
              {`SEE QUEST FOR WEBSITES IN ACTION`}
            </NeoFromQuestAiEm>
          </Subtitle>
          <Video2 data={data} />
        </Video1>
        <Benefits data={data}>
          <DesignWithoutLimits data={data}>
            <DesignToLiveHtml data={data}>
              {`Design without limits`}
            </DesignToLiveHtml>
            <ImportYourDifferen data={data}>
              {`Generate code that’s clean and efficient, and as good or better than hand-coded.`}
            </ImportYourDifferen>
          </DesignWithoutLimits>
          <ExportToCode data={data}>
            <DesignToLiveHtml1 data={data}>
              {`Export to code`}
            </DesignToLiveHtml1>
            <ImportYourDifferen1 data={data}>
              {`By removing the back and forth between designer and developer, your product will no longer  be just “good enough”.`}
            </ImportYourDifferen1>
          </ExportToCode>
          <LaunchAndDone data={data}>
            <DesignToLiveHtml2 data={data}>
              {`Launch and done`}
            </DesignToLiveHtml2>
            <ImportYourDifferen2 data={data}>
              {`Build exactly what your designer envisions with pixel-perfect conversion of your Figma designs.`}
            </ImportYourDifferen2>
          </LaunchAndDone>
        </Benefits>
        <SecPic data={data}>
          <Pic2 data={data}>
            <ForMarketers>
              <ForMarketers1 data={data}>{`For designers`}</ForMarketers1>
              <LoremIpsumForPlacCop data={data}>
                {`There’s no faster way for a designer to convert their designs into pixel-perfect web experiences.`}
              </LoremIpsumForPlacCop>
            </ForMarketers>
          </Pic2>
        </SecPic>
        <FeaturesForDesigners data={data}>
          <Frame124 data={data}>
            <RectangleCopy30>
              <Video3 data={data}>{`Bring in your designs`}</Video3>
              <Xxxxxxx data={data}>
                {data.currentVariant === 'Property1HTMLT'
                  ? `Design like you do today with frames in Figma.`
                  : data.currentVariant === 'Property1HTMLM'
                  ? `Design like you do today with frames in Figma.`
                  : `Design like you do today using frames in Figma.`}
              </Xxxxxxx>
            </RectangleCopy30>
            <RectangleCopy34>
              <Buttons data={data}>{`Design responsively`}</Buttons>
              <Xxxxxxx1 data={data}>
                {`Quest creates break-points automatically so your experience works as expected on any screen size.`}
              </Xxxxxxx1>
            </RectangleCopy34>
            <RectangleCopy40>
              <Components data={data}>{`Interactions`}</Components>
              <Xxxxxxx2 data={data}>
                {`Set up click, tap, mouse-over, mouse-out, etc. to build anything you want.`}
              </Xxxxxxx2>
            </RectangleCopy40>
            <RectangleCopy32>
              <Animations data={data}>{`Animations`}</Animations>
              <Xxxxxxx3 data={data}>
                {`Create animations easily to build a delightful experience for your users.`}
              </Xxxxxxx3>
            </RectangleCopy32>
          </Frame124>
          <Frame125 data={data}>
            <RectangleCopy38>
              <SfxMusic data={data}>{`Custom Fonts`}</SfxMusic>
              <UploadSoundAndMus data={data}>
                {`Add your custom fonts to create something unique.`}
              </UploadSoundAndMus>
            </RectangleCopy38>
            <RectangleCopy36>
              <Interactions data={data}>{`Components`}</Interactions>
              <Xxxxxxx4 data={data}>
                {`Reusable components to help you build fast across the team.`}
              </Xxxxxxx4>
            </RectangleCopy36>
            <RectangleCopy7>
              <CustomFonts data={data}>{`SFX & Music`}</CustomFonts>
              <QuestSupportsGoogl data={data}>
                {`Build an immersive experience for your audience.`}
              </QuestSupportsGoogl>
            </RectangleCopy7>
            <RectangleCopy18>
              <ParallaxScrolling data={data}>{`Video`}</ParallaxScrolling>
              <Xxxxxxx5 data={data}>
                {`Embed video easily to create an engaging experience.`}
              </Xxxxxxx5>
            </RectangleCopy18>
            <RectangleCopy23>
              <TriggerWithScroll data={data}>
                {`Scroll Effects`}
              </TriggerWithScroll>
              <Xxxxxxx6 data={data}>
                {`Set up parallax scrolling and trigger special effects on scroll.`}
              </Xxxxxxx6>
            </RectangleCopy23>
          </Frame125>
        </FeaturesForDesigners>
        <SecPic1 data={data}>
          <Pic21 data={data}>
            <ForMarketers2>
              <ForMarketers3 data={data}>{`For marketers`}</ForMarketers3>
              <LoremIpsumForPlacCop1 data={data}>
                {`Get all the advanced features you need to captivate and capture your audience.`}
              </LoremIpsumForPlacCop1>
            </ForMarketers2>
          </Pic21>
        </SecPic1>
        <FeaturesForMarketers data={data}>
          <Frame1241 data={data}>
            <RectangleCopy31>
              <Video4 data={data}>{`Custom Domain`}</Video4>
              <Xxxxxxx7 data={data}>
                {`Launch fast with your own custom domain.`}
              </Xxxxxxx7>
            </RectangleCopy31>
            <RectangleCopy35>
              <Buttons1 data={data}>{`A/B testing`}</Buttons1>
              <Xxxxxxx8 data={data}>
                {`Creating a variant of a page is as easy as importing a new design document.`}
              </Xxxxxxx8>
            </RectangleCopy35>
            <RectangleCopy41>
              <Components1 data={data}>{`Custom Forms`}</Components1>
              <Xxxxxxx9 data={data}>
                {`Easily set up custom designed forms for customers to provide input or contact you.`}
              </Xxxxxxx9>
            </RectangleCopy41>
          </Frame1241>
          <Frame1251 data={data}>
            <RectangleCopy33>
              <Animations1 data={data}>{`Connect to CRM`}</Animations1>
              <Xxxxxxx10 data={data}>
                {`Save customer data to CRM tools like HubSpot, Mailchimp, Salesforce, etc.`}
              </Xxxxxxx10>
            </RectangleCopy33>
            <RectangleCopy37>
              <Interactions1 data={data}>{`SEO Friendly`}</Interactions1>
              <Xxxxxxx11 data={data}>
                {`Score high on SEO with easy setup and detailed controls.`}
              </Xxxxxxx11>
            </RectangleCopy37>
            <RectangleCopy39>
              <SfxMusic1 data={data}>{`Fast Page Loads`}</SfxMusic1>
              <UploadSoundAndMus1 data={data}>
                {`Optimized pages that load fast for best customer experience and high page ranking.`}
              </UploadSoundAndMus1>
            </RectangleCopy39>
          </Frame1251>
        </FeaturesForMarketers>
        <SecPic2 data={data}>
          <Pic3 data={data}>
            <ForDevelopers data={data}>
              <ForMarketers4 data={data}>{`For developers`}</ForMarketers4>
              <LoremIpsumForPlacCop2 data={data}>
                {`Let Quest automate away the monotonous so you can focus on what’s important. `}
              </LoremIpsumForPlacCop2>
            </ForDevelopers>
          </Pic3>
        </SecPic2>
        <FeaturesForDeveloper data={data}>
          <Frame1242 data={data}>
            <RectangleCopy24>
              <Video5 data={data}>{`Custom Code & APIs`}</Video5>
              <Xxxxxxx12 data={data}>
                {`Use custom libraries or write your own code to build exactly what you want.`}
              </Xxxxxxx12>
            </RectangleCopy24>
            <RectangleCopy25>
              <Buttons2 data={data}>{`Custom CSS`}</Buttons2>
              <Xxxxxxx13 data={data}>
                {`Add custom CSS for more control on your customer experience.`}
              </Xxxxxxx13>
            </RectangleCopy25>
            <RectangleCopy29>
              <Components2 data={data}>{`HTML Snippets`}</Components2>
              <Xxxxxxx14 data={data}>
                {`Build custom elements and interactions using HTML snippets.`}
              </Xxxxxxx14>
            </RectangleCopy29>
          </Frame1242>
          <Frame1252 data={data}>
            <RectangleCopy27>
              <Animations2 data={data}>{`iFrames`}</Animations2>
              <Xxxxxxx15 data={data}>
                {`Build custom elements and interactions using HTML snippets into an iFrame.`}
              </Xxxxxxx15>
            </RectangleCopy27>
            <RectangleCopy28>
              <Interactions2 data={data}>
                {`Team Version Control`}
              </Interactions2>
              <Xxxxxxx16 data={data}>
                {`Automatic versioning and roll-back means worry-free team collaboration.`}
              </Xxxxxxx16>
            </RectangleCopy28>
            <RectangleCopy8>
              <SfxMusic2 data={data}>{`SSL`}</SfxMusic2>
              <UploadSoundAndMus2 data={data}>
                {`Easily secure your site and data with SSL.`}
              </UploadSoundAndMus2>
            </RectangleCopy8>
          </Frame1252>
        </FeaturesForDeveloper>
        <Faq data={data}>
          <FaQs data={data}>
            <Faq1 data={data}>{`FAQs`}</Faq1>
          </FaQs>
          <FaQs1>
            <Row>
              <Frame126>
                <GameChangingFeatur data={data}>
                  {`Who owns the code generated by Quest?`}
                </GameChangingFeatur>
                <NeoFromQuestAiEm1 data={data}>
                  {`You do. Export it, share it, deploy it as you want. `}
                </NeoFromQuestAiEm1>
              </Frame126>
              <Divider></Divider>
            </Row>
            <Row1>
              <Frame1261>
                <GameChangingFeatur1 data={data}>
                  {`How secure is the code generated by Quest?`}
                </GameChangingFeatur1>
                <NeoFromQuestAiEm2 data={data}>
                  {`Quest generates clean code to the latest standards. You can then deploy it to your security standards and specifications.`}
                </NeoFromQuestAiEm2>
              </Frame1261>
              <Divider1></Divider1>
            </Row1>
            <Row2>
              <Frame1262>
                <GameChangingFeatur2 data={data}>
                  {`How often can I export my code?`}
                </GameChangingFeatur2>
                <NeoFromQuestAiEm3 data={data}>
                  {`You can export website code, which comes as HTML, CSS, JS and image assets, 2 times a month for the free plan, 10 times for a month for the Personal plan & 30 times a month for the Pro plan.`}
                </NeoFromQuestAiEm3>
              </Frame1262>
              {false && <Divider2></Divider2>}
            </Row2>
          </FaQs1>
        </Faq>
        <Join data={data}>
          <JoinUsOnOurMissi data={data}>
            <JoinUsOnOurMissiSpan1
              data={data}
            >{`Join us`}</JoinUsOnOurMissiSpan1>
            <JoinUsOnOurMissiSpan2 data={data}>{` `}</JoinUsOnOurMissiSpan2>
            <JoinUsOnOurMissiSpan3
              data={data}
            >{`on our mission`}</JoinUsOnOurMissiSpan3>
          </JoinUsOnOurMissi>
          <ButtonOutlined2 variant="outlined" size="large" color="primary">
            {' '}
            Build for Free{' '}
          </ButtonOutlined2>
        </Join>
      </Page>
    </Property1HtmlD>
  );
}

export default Html;
